{"version":3,"sources":["components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","App.tsx","index.tsx"],"names":["PostsList","listOfPosts","handleOpenPostDetails","postId","className","map","post","userId","body","id","type","onClick","BASE_URL","loadUserComments","a","fetch","response","json","deleteComment","method","addComment","name","email","headers","JSON","stringify","NewCommentForm","getUserComments","useState","inputName","setInputName","inputEmail","setInputEmail","inputComment","setInputComment","handleSubmit","event","preventDefault","onSubmit","placeholder","value","onChange","target","PostDetails","userPostTitle","userComments","handleDeleteComment","hideCommentsButton","setHideCommentsButton","length","commentary","loadUsersPosts","loadUserPostDetails","App","setListOfPosts","selectorValue","setSelectorValue","setUserPostTitle","setUserComments","setPostId","userCommentsFromServer","getUserPosts","userPostsFromServer","filter","useEffect","postDetailsFromServer","title","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d736a8d.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  listOfPosts: Post[];\n  handleOpenPostDetails: (postId: number) => void;\n  postId: number;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  listOfPosts,\n  handleOpenPostDetails,\n  postId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {listOfPosts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>{`[User #${post.userId}]: `}</b>\n            {post.body}\n          </div>\n          {postId === post.id ? (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleOpenPostDetails(0)}\n            >\n              Close\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleOpenPostDetails(post.id)}\n            >\n              Open\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const loadUserComments = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n};\n\nexport const deleteComment = async (id: number) => {\n  const response = await fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n  });\n\n  return response.json();\n};\n\nexport const addComment = async (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<PostComm> => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { addComment } from '../../api/comments';\n\ntype Props = {\n  postId: number;\n  getUserComments: () => Promise<void>;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId,\n  getUserComments,\n}) => {\n  const [inputName, setInputName] = useState('');\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputComment, setInputComment] = useState('');\n\n  const clearInputs = () => {\n    setInputName('');\n    setInputEmail('');\n    setInputComment('');\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    await addComment(postId, inputName, inputEmail, inputComment);\n    await getUserComments();\n    clearInputs();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={inputName}\n          onChange={event => setInputName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={inputEmail}\n          onChange={event => setInputEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={inputComment}\n          onChange={event => setInputComment(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={handleSubmit}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  userPostTitle: string;\n  userComments: Post[];\n  handleDeleteComment: (id: number) => Promise<void>;\n  postId: number;\n  getUserComments: () => Promise<void>;\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  userPostTitle,\n  userComments,\n  handleDeleteComment,\n  postId,\n  getUserComments,\n}) => {\n  const [hideCommentsButton, setHideCommentsButton] = useState(true);\n\n  const handleButtonHide = () => {\n    setHideCommentsButton(!hideCommentsButton);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{userPostTitle}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button button-visible\"\n          onClick={handleButtonHide}\n        >\n          {`Hide ${userComments.length} comments`}\n        </button>\n\n        <ul\n          className={hideCommentsButton ? 'PostDetails__list' : 'PostDetails__list--hide'}\n        >\n          {userComments.map(commentary => (\n            <li key={commentary.id} className=\"PostDetails__list-item\">\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => handleDeleteComment(commentary.id)}\n              >\n                X\n              </button>\n              <p>{commentary.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            getUserComments={getUserComments}\n            postId={postId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const loadUsersPosts = async (): Promise<Post[]> => {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  return response.json();\n};\n\nexport const loadUserPostDetails = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport { loadUsersPosts, loadUserPostDetails } from './api/posts';\nimport { loadUserComments, deleteComment } from './api/comments';\n\nconst App: React.FC = () => {\n  const [listOfPosts, setListOfPosts] = useState<Post[]>([]);\n  const [selectorValue, setSelectorValue] = useState(0);\n  const [userPostTitle, setUserPostTitle] = useState('');\n  const [userComments, setUserComments] = useState<Post[]>([]);\n  const [postId, setPostId] = useState(0);\n\n  const getUserComments = async () => {\n    const userCommentsFromServer = await loadUserComments(postId);\n\n    setUserComments(userCommentsFromServer);\n  };\n\n  const getUserPosts = async () => {\n    const userPostsFromServer = await loadUsersPosts();\n\n    if (selectorValue > 0) {\n      return setListOfPosts(userPostsFromServer.filter(post => post.userId === selectorValue));\n    }\n\n    return setListOfPosts(userPostsFromServer);\n  };\n\n  const handleDeleteComment = async (id: number) => {\n    await deleteComment(id);\n    await getUserComments();\n  };\n\n  useEffect(() => {\n    getUserPosts();\n    getUserComments();\n  }, [selectorValue]);\n\n  const handleSelector = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectorValue(+event.target.value);\n  };\n\n  const handleOpenPostDetails = async (id: number) => {\n    setPostId(id);\n    const postDetailsFromServer = await loadUserPostDetails(id);\n    const userCommentsFromServer = await loadUserComments(id);\n\n    setUserComments(userCommentsFromServer);\n    setUserPostTitle(postDetailsFromServer.title);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"label\">\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectorValue}\n            onChange={handleSelector}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            listOfPosts={listOfPosts}\n            handleOpenPostDetails={handleOpenPostDetails}\n            postId={postId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postId !== 0 && (\n            <PostDetails\n              getUserComments={getUserComments}\n              userPostTitle={userPostTitle}\n              userComments={userComments}\n              handleDeleteComment={handleDeleteComment}\n              postId={postId}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}