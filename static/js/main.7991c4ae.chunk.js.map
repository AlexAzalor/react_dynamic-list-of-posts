{"version":3,"sources":["api/posts.ts","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","loadUsersPosts","a","fetch","response","json","loadUserPostDetails","postId","PostsList","handleOpenPostDetails","selectorValue","useState","listOfPosts","setListOfPosts","getUserPosts","userPostsFromServer","filter","post","userId","useEffect","className","map","body","id","type","onClick","loadUserComments","deleteComment","method","addComment","name","email","headers","JSON","stringify","NewCommentForm","getUserComments","inputName","setInputName","inputEmail","setInputEmail","inputComment","setInputComment","handleSubmit","event","preventDefault","onSubmit","placeholder","value","onChange","target","PostDetails","userPostTitle","userComments","setUserComments","hideCommentsButton","setHideCommentsButton","userCommentsFromServer","handleDeleteComment","length","commentary","App","setUserPostTitle","setPostId","setSelectorValue","postDetailsFromServer","title","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"qTAAMA,G,kBAAW,qCAEJC,EAAc,uCAAG,4BAAAC,EAAA,sEACLC,MAAM,GAAD,OAAIH,EAAJ,WADA,cACtBI,EADsB,yBAGrBA,EAASC,QAHY,2CAAH,qDAMdC,EAAmB,uCAAG,WAAOC,GAAP,eAAAL,EAAA,sEACVC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBO,IADjB,cAC3BH,EAD2B,yBAG1BA,EAASC,QAHiB,2CAAH,sD,OCGnBG,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,sBACAF,EAEI,EAFJA,OACAG,EACI,EADJA,cAEA,EAAsCC,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAY,uCAAG,4BAAAZ,EAAA,sEACeD,IADf,UACbc,EADa,SAGfL,EAAgB,GAHD,yCAIVG,EAAeE,EAAoBC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,SAAWR,OAJxD,gCAOZG,EAAeE,IAPH,2CAAH,qDAclB,OAJAI,qBAAU,WACRL,MACC,CAACJ,IAGF,sBAAKU,UAAU,YAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAd,SACGR,EAAYS,KAAI,SAAAJ,GAAI,OACnB,qBAAkBG,UAAU,kBAA5B,UACE,gCACE,6CAAcH,EAAKC,OAAnB,SACCD,EAAKK,QAEPf,IAAWU,EAAKM,GACf,wBACEC,KAAK,SACLJ,UAAU,2BACVK,QAAS,kBAAMhB,EAAsB,IAHvC,mBAQA,wBACEe,KAAK,SACLJ,UAAU,2BACVK,QAAS,kBAAMhB,EAAsBQ,EAAKM,KAH5C,oBAdKN,EAAKM,aCtClBvB,G,MAAW,qCAEJ0B,EAAgB,uCAAG,WAAOnB,GAAP,eAAAL,EAAA,sEACPC,MAAM,GAAD,OAAIH,EAAJ,4BAAgCO,IAD9B,cACxBH,EADwB,yBAGvBA,EAASC,QAHc,2CAAH,sDAMhBsB,EAAa,uCAAG,WAAOJ,GAAP,eAAArB,EAAA,sEACJC,MAAM,GAAD,OAAIH,EAAJ,qBAAyBuB,GAAM,CACzDK,OAAQ,WAFiB,cACrBxB,EADqB,yBAKpBA,EAASC,QALW,2CAAH,sDAQbwB,EAAU,uCAAG,WACxBtB,EACAuB,EACAC,EACAT,GAJwB,eAAApB,EAAA,sEAMDC,MAAM,GAAD,OAAIH,EAAJ,aAAyB,CACnD4B,OAAQ,OACRI,QAAS,CACP,eAAgB,mCAElBV,KAAMW,KAAKC,UAAU,CACnB3B,SACAuB,OACAC,QACAT,WAfoB,cAMlBlB,EANkB,yBAmBjBA,EAASC,QAnBQ,2CAAH,4DCPV8B,EAAkC,SAAC,GAGzC,IAFL5B,EAEI,EAFJA,OACA6B,EACI,EADJA,gBAEA,EAAkCzB,mBAAS,IAA3C,mBAAO0B,EAAP,KAAkBC,EAAlB,KACA,EAAoC3B,mBAAS,IAA7C,mBAAO4B,EAAP,KAAmBC,EAAnB,KACA,EAAwC7B,mBAAS,IAAjD,mBAAO8B,EAAP,KAAqBC,EAArB,KAQMC,EAAY,uCAAG,WAAOC,GAAP,SAAA1C,EAAA,6DACnB0C,EAAMC,iBADa,SAEbhB,EAAWtB,EAAQ8B,EAAWE,EAAYE,GAF7B,uBAGbL,IAHa,OALnBE,EAAa,IACbE,EAAc,IACdE,EAAgB,IAGG,2CAAH,sDAOlB,OACE,uBACEtB,UAAU,iBACV0B,SAAUH,EAFZ,UAIE,qBAAKvB,UAAU,aAAf,SACE,uBACEI,KAAK,OACLM,KAAK,OACLiB,YAAY,YACZ3B,UAAU,wBACV4B,MAAOX,EACPY,SAAU,SAAAL,GAAK,OAAIN,EAAaM,EAAMM,OAAOF,YAIjD,qBAAK5B,UAAU,aAAf,SACE,uBACEI,KAAK,OACLM,KAAK,QACLiB,YAAY,aACZ3B,UAAU,wBACV4B,MAAOT,EACPU,SAAU,SAAAL,GAAK,OAAIJ,EAAcI,EAAMM,OAAOF,YAIlD,qBAAK5B,UAAU,aAAf,SACE,0BACEU,KAAK,OACLiB,YAAY,oBACZ3B,UAAU,wBACV4B,MAAOP,EACPQ,SAAU,SAAAL,GAAK,OAAIF,EAAgBE,EAAMM,OAAOF,YAIpD,wBACExB,KAAK,SACLJ,UAAU,uCACVK,QAASkB,EAHX,+BCrDOQ,G,MAA+B,SAAC,GAMtC,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,aACA9C,EAGI,EAHJA,OACAG,EAEI,EAFJA,cACA4C,EACI,EADJA,gBAEA,EAAoD3C,oBAAS,GAA7D,mBAAO4C,EAAP,KAA2BC,EAA3B,KAEMpB,EAAe,uCAAG,4BAAAlC,EAAA,sEACewB,EAAiBnB,GADhC,OAChBkD,EADgB,OAGtBH,EAAgBG,GAHM,2CAAH,qDAMfC,EAAmB,uCAAG,WAAOnC,GAAP,SAAArB,EAAA,sEACpByB,EAAcJ,GADM,uBAEpBa,IAFoB,2CAAH,sDAKzBjB,qBAAU,WACRiB,MACC,CAAC1B,IAMJ,OACE,sBAAKU,UAAU,cAAf,UACE,+CAEA,yBAASA,UAAU,oBAAnB,SACE,4BAAIgC,MAGN,0BAAShC,UAAU,wBAAnB,UACE,wBACEI,KAAK,SACLJ,UAAU,wBACVK,QAhBiB,WACvB+B,GAAuBD,IAYnB,wBAKWF,EAAaM,OALxB,eAQA,oBACEvC,UAAWmC,EAAqB,oBAAsB,0BADxD,SAGGF,EAAahC,KAAI,SAAAuC,GAAU,OAC1B,qBAAwBxC,UAAU,yBAAlC,UACE,wBACEI,KAAK,SACLJ,UAAU,oCACVK,QAAS,kBAAMiC,EAAoBE,EAAWrC,KAHhD,eAOA,4BAAIqC,EAAWtC,SARRsC,EAAWrC,YAc1B,kCACE,qBAAKH,UAAU,4BAAf,SACE,cAAC,EAAD,CACEgB,gBAAiBA,EACjB7B,OAAQA,aCDLsD,EAtEO,WACpB,MAAwClD,mBAAiB,IAAzD,mBAAO0C,EAAP,KAAqBC,EAArB,KACA,EAA0C3C,mBAAS,IAAnD,mBAAOyC,EAAP,KAAsBU,EAAtB,KACA,EAA4BnD,mBAAS,GAArC,mBAAOJ,EAAP,KAAewD,EAAf,KACA,EAA0CpD,mBAAS,GAAnD,mBAAOD,EAAP,KAAsBsD,EAAtB,KAEMvD,EAAqB,uCAAG,WAAOc,GAAP,iBAAArB,EAAA,6DAC5B6D,EAAUxC,GADkB,SAEQjB,EAAoBiB,GAF5B,cAEtB0C,EAFsB,gBAGSvC,EAAiBH,GAH1B,OAGtBkC,EAHsB,OAK5BH,EAAgBG,GAChBK,EAAiBG,EAAsBC,OANX,2CAAH,sDAa3B,OACE,sBAAK9C,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wBAAO+C,QAAQ,QAAf,gCAGE,yBACE/C,UAAU,qBACV4B,MAAOtC,EACPuC,SAba,SAACL,GACtBoB,GAAkBpB,EAAMM,OAAOF,QASzB,UAKE,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAKN,uBAAM5B,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEV,cAAeA,EACfD,sBAAuBA,EACvBF,OAAQA,MAIZ,qBAAKa,UAAU,eAAf,SACc,IAAXb,GACC,cAAC,EAAD,CACE+C,gBAAiBA,EACjBF,cAAeA,EACfC,aAAcA,EACd3C,cAAeA,EACfH,OAAQA,aCnEtB6D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7991c4ae.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nexport const loadUsersPosts = async (): Promise<Post[]> => {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  return response.json();\n};\n\nexport const loadUserPostDetails = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\n\nimport { loadUsersPosts } from '../../api/posts';\n\ntype Props = {\n  handleOpenPostDetails: (postId: number) => void;\n  postId: number;\n  selectorValue: number;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  handleOpenPostDetails,\n  postId,\n  selectorValue,\n}) => {\n  const [listOfPosts, setListOfPosts] = useState<Post[]>([]);\n\n  const getUserPosts = async () => {\n    const userPostsFromServer = await loadUsersPosts();\n\n    if (selectorValue > 0) {\n      return setListOfPosts(userPostsFromServer.filter(post => post.userId === selectorValue));\n    }\n\n    return setListOfPosts(userPostsFromServer);\n  };\n\n  useEffect(() => {\n    getUserPosts();\n  }, [selectorValue]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {listOfPosts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.body}\n            </div>\n            {postId === post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleOpenPostDetails(0)}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleOpenPostDetails(post.id)}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const loadUserComments = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n};\n\nexport const deleteComment = async (id: number) => {\n  const response = await fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n  });\n\n  return response.json();\n};\n\nexport const addComment = async (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<PostComm> => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { addComment } from '../../api/comments';\n\ntype Props = {\n  postId: number;\n  getUserComments: () => Promise<void>;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId,\n  getUserComments,\n}) => {\n  const [inputName, setInputName] = useState('');\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputComment, setInputComment] = useState('');\n\n  const clearInputs = () => {\n    setInputName('');\n    setInputEmail('');\n    setInputComment('');\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    await addComment(postId, inputName, inputEmail, inputComment);\n    await getUserComments();\n    clearInputs();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={inputName}\n          onChange={event => setInputName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={inputEmail}\n          onChange={event => setInputEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={inputComment}\n          onChange={event => setInputComment(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={handleSubmit}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nimport { loadUserComments, deleteComment } from '../../api/comments';\n\ntype Props = {\n  userPostTitle: string;\n  userComments: Post[];\n  postId: number;\n  selectorValue: number;\n  setUserComments: React.Dispatch<React.SetStateAction<Post[]>>;\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  userPostTitle,\n  userComments,\n  postId,\n  selectorValue,\n  setUserComments,\n}) => {\n  const [hideCommentsButton, setHideCommentsButton] = useState(true);\n\n  const getUserComments = async () => {\n    const userCommentsFromServer = await loadUserComments(postId);\n\n    setUserComments(userCommentsFromServer);\n  };\n\n  const handleDeleteComment = async (id: number) => {\n    await deleteComment(id);\n    await getUserComments();\n  };\n\n  useEffect(() => {\n    getUserComments();\n  }, [selectorValue]);\n\n  const handleButtonHide = () => {\n    setHideCommentsButton(!hideCommentsButton);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{userPostTitle}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button button-visible\"\n          onClick={handleButtonHide}\n        >\n          {`Hide ${userComments.length} comments`}\n        </button>\n\n        <ul\n          className={hideCommentsButton ? 'PostDetails__list' : 'PostDetails__list--hide'}\n        >\n          {userComments.map(commentary => (\n            <li key={commentary.id} className=\"PostDetails__list-item\">\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => handleDeleteComment(commentary.id)}\n              >\n                X\n              </button>\n              <p>{commentary.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            getUserComments={getUserComments}\n            postId={postId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport { loadUserPostDetails } from './api/posts';\nimport { loadUserComments } from './api/comments';\n\nconst App: React.FC = () => {\n  const [userComments, setUserComments] = useState<Post[]>([]);\n  const [userPostTitle, setUserPostTitle] = useState('');\n  const [postId, setPostId] = useState(0);\n  const [selectorValue, setSelectorValue] = useState(0);\n\n  const handleOpenPostDetails = async (id: number) => {\n    setPostId(id);\n    const postDetailsFromServer = await loadUserPostDetails(id);\n    const userCommentsFromServer = await loadUserComments(id);\n\n    setUserComments(userCommentsFromServer);\n    setUserPostTitle(postDetailsFromServer.title);\n  };\n\n  const handleSelector = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectorValue(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"label\">\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectorValue}\n            onChange={handleSelector}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectorValue={selectorValue}\n            handleOpenPostDetails={handleOpenPostDetails}\n            postId={postId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postId !== 0 && (\n            <PostDetails\n              setUserComments={setUserComments}\n              userPostTitle={userPostTitle}\n              userComments={userComments}\n              selectorValue={selectorValue}\n              postId={postId}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}