{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","openDetail","testId","className","map","post","userId","body","id","type","onClick","BASE_URL","loadUsersPosts","a","fetch","response","json","loadUserPostDetails","postId","loadUserComments","deleteCommnt","method","del","addComm","name","email","headers","JSON","stringify","NewCommentForm","fetchComments","useState","inputName","setInputName","inputEmail","setInputEmail","inputComment","setInputComment","handleSubmit","event","preventDefault","onSubmit","placeholder","value","onChange","target","PostDetails","detail","comm","hide","handleButtonHide","deleteComm","e","App","setPost","setUserPost","setDetail","setComm","setHide","setTestId","com","fetchListPosts","userPostsFromServer","filter","useEffect","postId1","det","comm12","console","log","title","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f3b8e6a.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[];\n  openDetail: (postId: number) => void;\n  testId: number;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  openDetail,\n  testId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>{`[User #${post.userId}]: `}</b>\n            {post.body}\n          </div>\n          {testId === post.id ? (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => openDetail(0)}\n            >\n              Close\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => openDetail(post.id)}\n            >\n              Open\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// export async function getPosts(userId: number) {\n//   const response = await fetch(`${BASE_URL}${userId}`);\n\n//   return response.json();\n// }\n\nexport const loadUsersPosts = async (): Promise<Post[]> => {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  return response.json();\n};\n\nexport const loadUserPostDetails = async (postId = 0) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n};\n\nexport const loadUserComments = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n};\n\nexport const deleteCommnt = async (id: number) => {\n  const del = await fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n  });\n\n  return del.json();\n};\n\nexport const getComments = async () => {\n  const comm = await fetch(`${BASE_URL}/comments`);\n\n  return comm.json();\n};\n\nexport const addComm = async (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<PostComm> => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { addComm } from '../../api/api';\n\ntype Props = {\n  testId: number;\n  fetchComments: () => Promise<void>;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  testId,\n  fetchComments,\n}) => {\n  const [inputName, setInputName] = useState('');\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputComment, setInputComment] = useState('');\n\n  const clearInput = () => {\n    setInputName('');\n    setInputEmail('');\n    setInputComment('');\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    await addComm(testId, inputName, inputEmail, inputComment);\n    await fetchComments();\n    clearInput();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={inputName}\n          onChange={event => setInputName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={inputEmail}\n          onChange={event => setInputEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={inputComment}\n          onChange={event => setInputComment(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={handleSubmit}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  detail: string;\n  comm: Post[];\n  hide: boolean;\n  handleButtonHide: () => void;\n  deleteComm: (id: number) => Promise<void>;\n  testId: number;\n  fetchComments: () => Promise<void>;\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  detail,\n  comm,\n  hide,\n  handleButtonHide,\n  deleteComm,\n  testId,\n  fetchComments,\n}) => (\n  <div className=\"PostDetails\">\n    <h2>Post details:</h2>\n\n    <section className=\"PostDetails__post\">\n      <p>{detail}</p>\n    </section>\n\n    <section className=\"PostDetails__comments\">\n      <button\n        type=\"button\"\n        className=\"button button-visible\"\n        onClick={handleButtonHide}\n      >\n        Hide 2 comments\n      </button>\n\n      <ul\n        className={hide ? 'PostDetails__list' : 'PostDetails__list--hide'}\n      >\n        {comm.map(e => (\n          <li key={e.id} className=\"PostDetails__list-item\">\n            <button\n              type=\"button\"\n              className=\"PostDetails__remove-button button\"\n              onClick={() => deleteComm(e.id)}\n            >\n              X\n            </button>\n            <p>{e.body}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n\n    <section>\n      <div className=\"PostDetails__form-wrapper\">\n        <NewCommentForm\n          fetchComments={fetchComments}\n          testId={testId}\n        />\n      </div>\n    </section>\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport {\n  loadUsersPosts,\n  loadUserPostDetails,\n  loadUserComments,\n  deleteCommnt,\n} from './api/api';\n\nconst App: React.FC = () => {\n  const [posts, setPost] = useState<Post[]>([]);\n  const [postId, setUserPost] = useState(0);\n  const [detail, setDetail] = useState('');\n  const [comm, setComm] = useState<Post[]>([]);\n  const [hide, setHide] = useState(true);\n  const [testId, setTestId] = useState(0);\n\n  const fetchComments = async () => {\n    const com = await loadUserComments(testId);\n\n    setComm(com);\n  };\n\n  const fetchListPosts = async () => {\n    const userPostsFromServer = await loadUsersPosts();\n\n    if (postId > 0) {\n      return setPost(userPostsFromServer.filter(e => e.userId === postId));\n    }\n\n    return setPost(userPostsFromServer);\n  };\n\n  const deleteComm = async (id: number) => {\n    await deleteCommnt(id);\n    await fetchComments();\n  };\n\n  useEffect(() => {\n    fetchListPosts();\n    fetchComments();\n  }, [postId]);\n\n  const handleSelector = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserPost(+event.target.value);\n  };\n\n  const openDetail = async (postId1 = 0) => {\n    setTestId(postId1);\n    const det = await loadUserPostDetails(postId1);\n    const comm12 = await loadUserComments(postId1);\n\n    // eslint-disable-next-line no-console\n    console.log('comm12---', comm12);\n\n    setComm(comm12);\n    setDetail(det.title);\n  };\n\n  const handleButtonHide = () => {\n    setHide(!hide);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"label\">\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={postId}\n            onChange={handleSelector}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            openDetail={openDetail}\n            testId={testId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {testId !== 0 && (\n            <PostDetails\n              fetchComments={fetchComments}\n              detail={detail}\n              comm={comm}\n              hide={hide}\n              handleButtonHide={handleButtonHide}\n              deleteComm={deleteComm}\n              testId={testId}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}